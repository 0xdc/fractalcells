# Bootstraps a stock FreeBSD installation for use with Ansible.
# Expects ssh to work, and your user to be in the wheel group.
---
- hosts: all
  become: yes
  become_method: su
  gather_facts: no
  tasks:
  - name: Check if pkg(8) needs bootstrapping
    raw: /usr/sbin/pkg -N
    register: pkg
    ignore_errors: True

  - name: Bootstrap pkg tool
    raw: /usr/bin/env ASSUME_ALWAYS_YES=1 /usr/sbin/pkg bootstrap -f
    when: pkg|failed

  - name: Install python and sudo so that ansible can run in non-raw mode
    raw: /usr/sbin/pkg install -y python27 python sudo
  
  - name: Deploy rudimentary sudoers file.
    shell: "/bin/echo %wheel ALL=\\(ALL\\) NOPASSWD: ALL > /usr/local/etc/sudoers.d/fractalcells"

- hosts: all
  become: yes
  become_method: sudo
  tasks:

  - name: Install management tools
    pkgng:
      name: "{{ item }}"
      state: present
    with_items:
    - tmux
    - vim-lite

  - name: allow wheel to sudo - the proper way
    copy:
      content: "# ansible managed\n%wheel ALL=(ALL) NOPASSWD: ALL"
      dest: /usr/local/etc/sudoers.d/fractalcells
      mode: 0440
      validate: 'visudo -cf %s'

  - name: Check if FreeBSD needs an update to 10.2
    shell: freebsd-version -ku
    register: freebsdversion
  - name: Upgrade FreeBSD to 10.2
    shell: freebsd-update -r 10.2-RELEASE upgrade --not-running-from-cron
    environment:
      PAGER: cat
    when: "'10.1' in freebsdversion.stdout"
  - name: Install FreeBSD 10.2 upgrade
    shell: freebsd-update install --not-running-from-cron
    when: "'10.1' in freebsdversion.stdout"
  - name: Reboot server to apply 10.2 kernel
    shell: shutdown -r +1 "rebooting to 10.2"
    when: "'10.1' in freebsdversion.stdout"
  - name: Wait 5 minutes for server to reboot
    pause: minutes=5
    when: "'10.1' in freebsdversion.stdout"
  - name: Install remaining 10.2 userland
    shell: freebsd-update install --not-running-from-cron
    when: "'10.1' in freebsdversion.stdout"

  - name: upgrade pkg(8) version
    shell: pkg upgrade -fy pkg

  - name: Clear ports directory
    file: path=/usr/ports state=absent
    ignore_errors: yes

  - name: load swap
    shell: swapon /dev/xbd4s1
    ignore_errors: yes
