# Copyright 2015, Perceivon Hosting Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY PERCEIVON HOSTING INC. AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL PERCEIVON HOSTING INC. OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
- name: basejail uuid
  iocage: state=exists tag='basejail_{{ iocage_release_version }}'
  register: basejail
  tags:
  - iocage-template
  - iocage-cell

- name: Check if template jail already exists
  iocage: state=exists tag='template_{{ iocage_release_version }}'
  register: template_jail
  tags:
  - iocage-template
  - iocage-cell
  register: template_jail

- name: debug template_jail
  debug: var=template_jail
  tags:
   - pf

- name: Create template jail
  iocage: state=cloned clone_from='basejail_{{ iocage_release_version }}' tag='template_{{ iocage_release_version }}' properties="pkglist={{ iocage_jails_dir }}/pkglist.txt ip4_addr='{{ production_jails.template.interface }}|{{ production_jails.template.ip }}' resolver='nameserver {{ internal_ip }}'"
  tags:
  - iocage-cell
  - iocage-template
  register: template_jail
  when:
  - "'uuid' in template_jail and (template_jail['uuid'] is not defined or template_jail['uuid'] == '-')" 

- name: Check if template jail already exists
  iocage: state=exists tag='template_{{ iocage_release_version }}'
  register: template_jail
  tags:
  - iocage-template
  - iocage-template-uuid
  - iocage-cell

- assert:
    that:
     - template_jail is defined and template_jail.uuid != ""

- name: Start template jail
  iocage: state=started tag='template_{{ iocage_release_version }}'
  tags:
  - iocage-cell
  - iocage-template
  register: template_jail

- assert:
    that:
      - template_jail|success

- name: Check if template jail needs pkg bootstrap
  stat: path=/iocage/jails/{{ template_jail.uuid }}/root/var/db/pkg/local.sqlite
  register: template_jail_pkgdb
  run_once: true
  tags:
  - iocage-cell
  - iocage-template

- name: Bootstrap pkg for template jail
  iocage: state=exec uuid={{ template_jail.uuid }} cmd='/bin/sh -c "ASSUME_ALWAYS_YES=yes /usr/sbin/pkg bootstrap -f && /usr/local/sbin/pkg update -f"'
  when:
  - template_jail|success
  #- template_jail_pkgdb is not defined
  #- not template_jail_pkgdb.stat.exists
  run_once: true
  tags:
  - iocage-cell
  - iocage-template

# TODO: put checking sauce to see if that actually needs to be done.
- name: Install all of the things
  run_once: true
  when:
  - template_jail|success
  #- template_jail_pkgdb is not defined
  #- not template_jail_pkgdb.stat.exists
  iocage: state=exec tag={{ production_jails.template.tag }}{{ iocage_release_version }} cmd="/bin/sh -c \"ASSUME_ALWAYS_YES=yes pkg install -y {{ production_jails.template.pkgs | join(' ') }} | tee -a /var/log/pkg.log.{{ production_jails.template.tag }}{{ iocage_release_version }}\""
  tags:
  - iocage-cell
  - iocage-template

- name: Stop template jail
  tags:
  - iocage-cell
  - iocage-template
  iocage: state=stopped tag={{ template_jail.uuid }}
  when: "template_jail|success"
  register: template_jail


# NOTE: Create infrastructure jails in the 'cell' role!
