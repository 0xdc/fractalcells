# Copyright 2015, Perceivon Hosting Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY PERCEIVON HOSTING INC. AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL PERCEIVON HOSTING INC. OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
- name: Test if postgresql jail is started
  tags:
  - pgsql
  - pgsql-debug
  shell: /usr/local/sbin/iocage list | awk '/{{ postgresql_jail_uuid.stdout.strip() }}/ {print $4}'
  register: postgresql_jail_started

- name: Start Postgresql jail
  tags:
  - pgsql
  - pgsql-debug
  shell: /usr/local/sbin/iocage start {{ postgresql_jail_uuid.stdout.strip() }}
  when: postgresql_jail_started.stdout.strip() != "up"
  register: postgresql_jail_started

#- name: debug postgresql_jail_dir
#  debug: var=postgresql_jail_dir
#  tags:
#  - pgsql
#  - pgsql-debug

- name: Install PostgreSQL 9.4
  run_once: true
  when: postgresql_jail_started|success
  shell: "iocage exec -u root {{ production_jails.postgresql.tag }} /bin/sh -c \"ASSUME_ALWAYS_YES=yes pkg install -y {{ production_jails.postgresql.pkgs | join(' ') }} \" | tee -a /var/log/pkg.log.{{ production_jails.postgresql.tag }}"
  tags:
  - db
  - pgsql
  - pgsql-debug
  - debug

- name: Deploy PostgresSQL config files
  when: postgresql_jail_started|success
  template: src='{{ item.name }}.j2' dest='{{ postgresql_jail_dir.stat.path }}/{{ item.path }}/{{ item.name }}' mode=0644
  with_items:
  - { name: "pg_hba.conf", path: "/usr/local/etc", mode: 644 }
  - { name: "postgresql.conf", path: "/usr/local/etc", mode: 644 }
  register: postgresql_config_deployed
  tags: 
  - db
  - pgsql

# XXX: ugly hack
- name: Enable Postgresql service
  when: postgresql_jail_started|success
  lineinfile: dest={{ postgresql_jail_dir.stat.path }}/etc/rc.conf state=present insertafter=EOF line="postgresql_enable=\"YES\""
  tags:
  - db
  - pgsql

- stat: path=/iocage/jails/{{ postgresql_jail_uuid.stdout.strip() }}/root/usr/local/pgsql/data
  register: postgresql_data_dir
  tags:
  - db
  - pgsql


- name: Initialize PostgreSQL 9.4
  when:
  - postgresql_jail_started|success
  - not postgresql_data_dir.stat.exists
  shell: iocage exec -u root {{ production_jails.postgresql.tag }} /bin/sh -c "service postgresql initdb"
  tags:
  - db
  - pgsql

# XXX: FIX THIS
- stat: path=/iocage/jails/{{ postgresql_jail_uuid.stdout.strip() }}/root/usr/local/pgsql/data/postmaster.opts
  register: postgresql_postmaster_file
  tags:
  - db
  - pgsql
- name: Initialize Postgres 9.4, part II
  when:
  - postgresql_jail_started|success
  - not postgresql_postmaster_file.stat.exists
  shell: iocage exec -u pgsql {{ production_jails.postgresql.tag }} /bin/sh -c "/usr/local/bin/postmaster -D /usr/local/pgsql/data &"
  tags:
  - db
  - pgsql
- name: Initialize Postgres 9.4, part III
  when:
  - postgresql_jail_started|success
  - not postgresql_postmaster_file.stat.exists
  shell: iocage exec -u pgsql {{ production_jails.postgresql.tag }} /bin/sh -c "sleep 5 && service postgresql stop"
  tags:
  - db
  - pgsql

- name: start postgresql service
  shell: iocage exec {{ postgresql_jail_uuid.stdout.strip() }} /bin/sh -c "service postgresql restart"
  tags:
  - db
  - pgsql

# FIXME: soon as dkara publishes
#- name: Enable postgresql service
#  service: name=postgresql enabled=true state=started
#  tags: pgsql

