# Copyright 2015, Perceivon Hosting Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY PERCEIVON HOSTING INC. AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL PERCEIVON HOSTING INC. OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
- name: Make sure postgresql jail is started
  iocage: state=started tag='{{ production_jails.postgresql.tag }}'
  tags:
  - pgsql
  - pgsql-debug
  - pgsql-roles
  - pgsql-dbs
  register: postgresql_jail

#- name: debug postgresql_jail_dir
#  debug: var=postgresql_jail_dir
#  tags:
#  - pgsql
#  - pgsql-debug

- name: Install PostgreSQL 9.4
  iocage: state=exec tag={{ production_jails.postgresql.tag }} cmd="/bin/sh -c \"ASSUME_ALWAYS_YES=yes pkg install -y {{ production_jails.postgresql.pkgs | join(' ') }} \" | tee -a /var/log/pkg.log.{{ production_jails.postgresql.tag }}"
  run_once: true
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  tags:
  - db
  - pgsql

# XXX: ugly hack
- name: Enable Postgresql service
  lineinfile: dest={{ postgresql_jail_dir.stat.path }}/etc/rc.conf state=present insertafter=EOF line="postgresql_enable=\"YES\""
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  tags:
  - db
  - pgsql

- name: Check if postgresql jail needs postgresql initdb
  stat: path=/iocage/jails/{{ postgresql_jail.uuid }}/root/usr/local/pgsql/data
  register: postgresql_data_dir
  tags:
  - db
  - pgsql

- name: Initialize PostgreSQL 9.4
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  - not postgresql_data_dir.stat.exists
  iocage: state=exec tag={{ production_jails.postgresql.tag }} cmd="/bin/sh -c \"service postgresql initdb\""
  tags:
  - db
  - pgsql

- name: Deploy PostgresSQL config files
  template: src='{{ item.name }}.j2' dest='{{ postgresql_jail_dir.stat.path }}/{{ item.path }}/{{ item.name }}' mode=0644
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  with_items:
  - { name: "pg_hba.conf", path: "/usr/local/pgsql/data", mode: 644 }
  - { name: "postgresql.conf", path: "/usr/local/pgsql/data", mode: 644 }
  register: postgresql_config_deployed
  tags: 
  - db
  - pgsql

# XXX: FIX THIS
- name: Check if postgresql jail needs postmaster run
  stat: path=/iocage/jails/{{ postgresql_jail.uuid }}/root/usr/local/pgsql/data/postmaster.opts
  register: postgresql_postmaster_file
  tags:
  - db
  - pgsql

- name: Initialize Postgres 9.4, part II
  iocage: state=exec tag={{ production_jails.postgresql.tag }} user=pgsql cmd="/bin/sh -c \"/usr/local/bin/postmaster -D /usr/local/pgsql/data &\""
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  - not postgresql_postmaster_file.stat.exists
  tags:
  - db
  - pgsql
# TODO: Remove ugly hack.
- name: Initialize Postgres 9.4, part III
  iocage: state=exec tag={{ production_jails.postgresql.tag }} cmd="/bin/sh -c \"sleep 5 && service postgresql stop || /usr/bin/true\""
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  - not postgresql_postmaster_file.stat.exists
  tags:
  - db
  - pgsql

- name: start postgresql service
  iocage: state=exec tag={{ postgresql_jail.uuid }} cmd="/bin/sh -c \"service postgresql restart\""
  when:
  - "'uuid' in postgresql_jail and (postgresql_jail['uuid'] is defined and postgresql_jail['uuid'] != '-')"
  tags:
  - db
  - pgsql
